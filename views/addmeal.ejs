<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title> <!-- כותרת דינמית -->
    <style>
        body {
            font-family: Arial, sans-serif;
            background-image: url('/images/ADD_MEAL.jpg');
            background-size: cover;
            background-position: center;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
        }
        .container {
            background-color: rgba(255, 255, 255, 0);
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            max-width: 400px;
            width: 100%;
            text-align: center;
        }
        #drop-area {
            border: 2px dashed #d4b862;
            padding: 20px;
            margin-bottom: 20px;
            border-radius: 8px;
            cursor: pointer;
        }
        #urlInput {
            width: 100%;
            padding: 10px;
            margin-bottom: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
        }
        button {
            width: 100%;
            padding: 10px;
            background-color: #d4b862;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #bfa456;
        }
        #message, #result, #sugarInfo, #holidayMessage {
            margin-top: 20px;
            font-size: 16px;
            color: #333;
        }
        #result, #sugarInfo {
            background-color: #f8f9fa;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            text-align: left;
            max-height: 200px;
            overflow-y: auto;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2><%= title %></h2> <!-- כותרת דינמית -->
        <div id="drop-area">Drag & Drop an Image Here or Click to Select</div>
        <input type="file" id="fileInput" style="display: none;">
        <input type="text" id="urlInput" placeholder="Or enter an image URL" required>
        <button id="uploadBtn">Upload</button>

        <!-- מידע תזונתי -->
        <div id="sugarInfo"></div>
        
        <!-- הודעות שבת/חג -->
        <div id="holidayMessage"><%= holidayMessage || '' %></div>
        
        <!-- תוצאות דינמיות -->
        <div id="result"><%= tags && tags.length > 0 ? tags.map(tag => `${tag.tag.en} - Confidence: ${tag.confidence.toFixed(2)}%`).join('<br>') : '' %></div>

        <!-- הודעות כלליות -->
        <div id="message"><%= message || '' %></div>
    </div>

    <script>
        const dropArea = document.getElementById('drop-area');
        const fileInput = document.getElementById('fileInput');
        const urlInput = document.getElementById('urlInput');
        const uploadBtn = document.getElementById('uploadBtn');
        const messageDiv = document.getElementById('message');
        const resultDiv = document.getElementById('result');
        const sugarInfoDiv = document.getElementById('sugarInfo');

        dropArea.addEventListener('click', () => fileInput.click());

        dropArea.addEventListener('dragover', (event) => {
            event.preventDefault();
            dropArea.style.borderColor = '#bfa456';
        });

        dropArea.addEventListener('dragleave', () => {
            dropArea.style.borderColor = '#d4b862';
        });

        
        // כאשר התמונה נגררת לאזור
        dropArea.addEventListener('drop', async (event) => {
            event.preventDefault();
            dropArea.style.borderColor = '#d4b862';

            const file = event.dataTransfer.files[0];  // התמונה שנגררה
            if (file) {
                await handleFileUpload(file);
            }
        });

        // כאשר המשתמש בוחר קובץ דרך הקלטה
        fileInput.addEventListener('change', async () => {
            const file = fileInput.files[0];  // הקובץ שנבחר
            if (file) {
                await handleFileUpload(file);
            }
        });

        async function handleFileUpload(file) {
            const formData = new FormData();
            formData.append('image', file);  // הוספת התמונה ל-FormData
            

            try {
                // שליחת הקובץ לקונטרולר בשרת שלך
                const response = await fetch('/analyze-image-move', {
                    method: 'POST',
                    body: formData  // שליחת ה-FormData
                });

                // עיבוד התשובה מהשרת
                const data = await response.json();
                console.log('Response from Controller:', data);

                if (data.success && data.result) {
                    // הצגת התגיות שהתקבלו
                    if (data.result.tags && data.result.tags.length > 0) {
                        //displayTags(data.result.tags);
                        messageDiv.innerText = 'Image analyzed successfully';
                    } else {
                        messageDiv.innerText = 'No tags found for this image';
                        resultDiv.innerText = '';
                    }

                    // הצגת נתונים תזונתיים שהתקבלו
                    if (data.result.nutritionalData) {
                        const { firstTag, sugarValue, glucoseValue } = data.result.nutritionalData;
                        displayNutritionalInfo(firstTag, sugarValue, glucoseValue);
                    }
                } else {
                    messageDiv.innerText = 'Error analyzing the image.';
                }
            } catch (error) {
                console.error('Error uploading file to server:', error);
                messageDiv.innerText = `Error: ${error.message}`;
            }
        }




        uploadBtn.addEventListener('click', async () => {
            console.log('Upload button clicked'); // הדפסת לוג כדי לוודא שהאירוע נתפס
            const imageUrl = urlInput.value;
            if (imageUrl) {
                try {
                    console.log('Preparing to send request...');
                    const response = await fetch('/analyze-image', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            imageUrl: imageUrl // נתונים שנשלחים
                        })
                    });

                    if (response.ok) {
                        const data = await response.json(); // התשובה מהשרת
                        console.log('API Response:', result); // הדפסת התשובה מה-API
                        
                        if (data.result && data.result.tags && data.result.tags.length > 0) {
                            //displayTags(data.result.tags);
                            messageDiv.innerText = 'Image analyzed successfully';
                            const firstTag = data.result.tags[0].tag.en;
                        } else {
                            messageDiv.innerText = 'No tags found for this image';
                            resultDiv.innerText = '';
                        }

                        if (data.result.nutritionalData) {
                        const { firstTag, sugarValue, glucoseValue } = data.result.nutritionalData;
                        displayNutritionalInfo(firstTag, sugarValue, glucoseValue);
                        }

                    } else {
                        console.error('Failed to fetch:', response.statusText);
                        messageDiv.innerText = 'Error saving data to DB.';
                    }
                } catch (error) {
                    console.error('Request failed', error);
                    messageDiv.innerText = `Error: ${error.message}`;
                }
            } else {
                messageDiv.innerText = 'Please provide an image URL.';
            }
        });



    function displayResult(result) {
        if (result && result.tags && result.tags.length > 0) {
            resultDiv.innerHTML = '<h4>Image Tags:</h4>';
            result.tags.forEach(tag => {
                resultDiv.innerHTML += `<p>${tag.tag.en} - Confidence: ${tag.confidence.toFixed(2)}%</p>`;
            });
        } else {
            resultDiv.innerHTML = '<p>No tags found for this image.</p>';
        }
    }


        function displayTags(tags) {
            resultDiv.innerHTML = '<h4>Image Tags:</h4>';
            tags.forEach(tag => {
                resultDiv.innerHTML += `<p>${tag.tag.en} - Confidence: ${tag.confidence.toFixed(2)}%</p>`;
            });
        }

        
        function displayNutritionalInfo(foodItem, sugarValue, glucoseValue) {
            sugarInfoDiv.innerHTML = `<h4>Nutritional Information:</h4>
                                    <p>Food: ${foodItem}</p>
                                    <p>Sugar: ${sugarValue ? sugarValue + 'g' : 'N/A'}</p>
                                    <p>Glucose: ${glucoseValue ? glucoseValue + 'g (Total Sugars)' : 'N/A'}</p>`;
        }

       



        async function handleCheckDate(year, month, day, hour, minute) {
            try {
                // שליחת בקשה לנתיב שבשרת
                console.log('hello');
                const response = await fetch('/check-date', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        year: year,
                        month: month,
                        day: day,
                        hour: hour,
                        minute: minute
                    })
                });

                if (response.ok) {
                    const data = await response.json();
                    const message = data.message; // קבלת ההודעה מהשרת
                    displayHolidayMessage(message); // מציג את ההודעה
                } else {
                    console.error('Failed to fetch data from server');
                }
            } catch (error) {
                console.error('Error:', error);
            }
        }



        function displayHolidayMessage(message) {
            const holidayMessageDiv = document.getElementById('holidayMessage');
            holidayMessageDiv.innerText = message;
            holidayMessageDiv.style.color = '#d4b862';
            holidayMessageDiv.style.fontWeight = 'bold';
        }

        console.log('Before calling handleCheckDate'); 
        handleCheckDate(2024, 11, 23, 19, 30);
        console.log('After calling handleCheckDate');

    </script>
</body>
</html>